=============================》mainActivity
public class Main_vp extends AppCompatActivity {
    private ViewPager mMainVp;
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main_vp);
        initView();
    }
    private void initView() {
        mMainVp = (ViewPager) findViewById(R.id.main_vp);

        ArrayList<View> list = new ArrayList<View>();
        //布局加载器
        View inflate1 = LayoutInflater.from(this).inflate(R.layout.layout_vp_1, null);
        View inflate2 = LayoutInflater.from(this).inflate(R.layout.layout_vp_2, null);
        list.add(inflate1);
        list.add(inflate2);

        MyAdapter_vp myAdapter_vp = new MyAdapter_vp(list);
        mMainVp.setAdapter(myAdapter_vp);
    }
========================================>自定义类继承PagerAdapter并重写四个方法：
public class MyAdapter_vp extends PagerAdapter {
   private  ArrayList<View> list ;
    public MyAdapter_vp(ArrayList<View> list) {
        this.list = list;
    }
    @Override
    public int getCount() {
        return list.size();
    }
    @Override
    public boolean isViewFromObject(@NonNull View view, @NonNull Object object) {
        return view == object;
    }
    //滑入
    @NonNull
    @Override
    public Object instantiateItem(@NonNull ViewGroup container, int position) {
        View view = list.get(position);
        container.addView(view);
        return view;
    }
    //滑出
    @Override
    public void destroyItem(@NonNull ViewGroup container, int position, @NonNull Object object) {
        //super.destroyItem(container, position, object);
        View view = list.get(position);
        container.removeView(view);
    }
}

===============》
mainActivity中的布局
    <android.support.v4.view.ViewPager
        android:id="@+id/main_vp"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        >
    </android.support.v4.view.ViewPager>

=============》自定义几个XML文件




//自动引导界面

public class MainActivity extends AppCompatActivity {
    private int i = 0;
    private Timer timer;
    @SuppressLint("HandlerLeak")
    Handler hand = new Handler(){
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            i++;
            if (i<list.size()){
                vp.setCurrentItem(i);//
            }else{
                timer.cancel();
                startActivity(new Intent(MainActivity.this,Main2Activity.class));
            }
        }
    };
    private ArrayList<View> list;
    private ViewPager vp;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        vp = findViewById(R.id.vp);

        View item_vp1 = LayoutInflater.from(this).inflate(R.layout.item_vp1, null, false);
        View item_vp2 = LayoutInflater.from(this).inflate(R.layout.item_vp2, null, false);
        View item_vp3 = LayoutInflater.from(this).inflate(R.layout.item_vp3, null, false);
        View btn = item_vp3.findViewById(R.id.btn);

        btn.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Toast.makeText(MainActivity.this, "你点击了跳转", Toast.LENGTH_SHORT).show();
            }
        });
        //创建适配器
        list = new ArrayList<>();
        list.add(item_vp1);
        list.add(item_vp2);
        list.add(item_vp3);
        MyAdapter myAdapter = new MyAdapter(list);
        vp.setAdapter(myAdapter);

        TimerTask timerTask = new TimerTask() {
            @Override
            public void run() {
                hand.sendEmptyMessage(0);
            }
        };
        timer = new Timer();
        timer.schedule(timerTask,3000,3000);

    }
}





