===============================布局===activity_main.xml==============》
<android.support.v4.widget.DrawerLayout
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context="com.example.along.day04_drawerlayout.MainActivity"
    android:id="@+id/dl"
    >
   <!--
        主界面
   -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent">
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="主界面"
            android:textSize="50sp"
            />
    </LinearLayout>

    <!--
        侧滑部分
            1 头
            2 菜单
    -->
    <LinearLayout
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:orientation="vertical"
        android:layout_gravity="left"
        android:background="@color/white"
        >
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="头部分"
            />
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="菜单1"
            />
        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="菜单2"
            />
    </LinearLayout>
</android.support.v4.widget.DrawerLayout>

==================MainActivity.java=======================================》
	public class MainActivity extends AppCompatActivity {

    private DrawerLayout dl;
    private NavigationView nav;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        dl = findViewById(R.id.dl);
        nav = findViewById(R.id.nav);
        //获得 头部分的  控件
        View headerView = nav.getHeaderView(0);
        ImageView iv = headerView.findViewById(R.id.iv);
        Toolbar toolbar = findViewById(R.id.toolbar);
        setSupportActionBar(toolbar);
        toolbar.setNavigationIcon(R.mipmap.ic_launcher);

        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                dl.openDrawer(nav);
            }
        });

       /* //创建一个开关
        ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(this, dl, toolbar, R.string.open, R.string.closs);
        dl.addDrawerListener(toggle);
        toggle.syncState();*/

        TextView textView = findViewById(R.id.tvmain);
        textView.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {

                dl.openDrawer(nav);// 代码打开侧滑菜单
            }
        });

        iv.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Log.i("tag","你点击了侧滑的头部分");
            }
        });

        nav.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {

            private String s;

            @Override
            public boolean onNavigationItemSelected(@NonNull MenuItem item) {

                switch (item.getItemId()){
                    case R.id.item1:
                        s = item.getTitle().toString();
                        break;

                    case R.id.item2:
                        s = item.getTitle().toString();
                        break;
                }
                Log.i("tag","===> "+s);
                return false;
            }
        });

        //监听 侧滑的  打开和关闭
        dl.addDrawerListener(new DrawerLayout.DrawerListener() {
            @Override
            public void onDrawerSlide(View drawerView, float slideOffset) {
                // 侧滑 100分比
            }

            @Override
            public void onDrawerOpened(View drawerView) {
                Log.i("tag","侧滑打开");
            }

            @Override
            public void onDrawerClosed(View drawerView) {
                Log.i("tag","侧滑关闭");
            }

            @Override
            public void onDrawerStateChanged(int newState) {

                //侧滑的状态
                // 1 拖动打开   2 自动滑开   3已经打开
            }
        });

    }
    ================activity_main.xml==================================>
    布局
    <android.support.v4.widget.DrawerLayout
    
    xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:id="@+id/dl"tools:context="com.example.along.day04_drawerlayout_navigationview.MainActivity">

    <!--
        主界面
    -->
    <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:orientation="vertical"
        >

        <android.support.v7.widget.Toolbar
            android:id="@+id/toolbar"
            android:layout_width="match_parent"
            android:layout_height="wrap_content">

        </android.support.v7.widget.Toolbar>

        <TextView
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:text="主界面"
            android:textSize="50sp"
            android:id="@+id/tvmain"
            />
    </LinearLayout>

    <!--
        侧滑部分（属性）
            1 头
            2 侧滑菜单
    -->
    <android.support.design.widget.NavigationView
        android:layout_width="wrap_content"
        android:layout_height="match_parent"
        android:id="@+id/nav"
        app:menu="@menu/menu"
        android:layout_gravity="left"
        app:headerLayout="@layout/header_layout"
        >
    </android.support.design.widget.NavigationView>

</android.support.v4.widget.DrawerLayout>
==============header_layout.xml==========================>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent">

    <ImageView
        android:id="@+id/iv"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:src="@mipmap/ic_launcher"
        />

</LinearLayout>
========================布局资源====menu========>

<menu xmlns:android="http://schemas.android.com/apk/res/android">

    <item android:id="@+id/item1" android:title="测试1"></item>
    <item android:id="@+id/item2" android:title="测试2"></item>
    <item android:id="@+id/item3" android:title="测试3"></item>


</menu>
