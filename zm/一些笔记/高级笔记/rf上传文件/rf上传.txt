package com.jiyun.day13;

import android.Manifest;
import android.content.pm.PackageManager;
import android.os.Bundle;
import android.os.Environment;
import android.support.annotation.NonNull;
import android.support.v4.app.ActivityCompat;
import android.support.v4.content.ContextCompat;
import android.support.v7.app.AppCompatActivity;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.Toast;

import com.bumptech.glide.Glide;
import com.google.gson.Gson;

import java.io.File;
import java.io.IOException;

import okhttp3.Call;
import okhttp3.Callback;
import okhttp3.MediaType;
import okhttp3.MultipartBody;
import okhttp3.OkHttpClient;
import okhttp3.Request;
import okhttp3.RequestBody;
import okhttp3.Response;

public class MainActivity extends AppCompatActivity implements View.OnClickListener {

    private static final String TAG = MainActivity.class.getName();
    private Button btn;
    private ImageView img;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initView();
    }

    private void initView() {
        btn = (Button) findViewById(R.id.btn);
        img = (ImageView) findViewById(R.id.img);

        btn.setOnClickListener(this);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.btn:
                initData();
                break;
        }
    }

    private void initData() {
        //1.
        if (ContextCompat.checkSelfPermission(this,Manifest.permission.READ_EXTERNAL_STORAGE)==PackageManager.PERMISSION_GRANTED){
            uploadFile();
        }else{
            //2.
            ActivityCompat.requestPermissions(this,new String[]{Manifest.permission.READ_EXTERNAL_STORAGE},100);
        }
    }

    //3.
    @Override
    public void onRequestPermissionsResult(int requestCode, @NonNull String[] permissions,
                                           @NonNull int[] grantResults) {
        super.onRequestPermissionsResult(requestCode, permissions, grantResults);
        if (requestCode == 100 && grantResults.length> 0 && grantResults[0] == PackageManager.PERMISSION_GRANTED){
            uploadFile();
        }
    }
    private void uploadFile() {
        //获取要上传的文件
        File file = null;
        if (Environment.getExternalStorageState().equals(Environment.MEDIA_MOUNTED)){
            File sd = Environment.getExternalStorageDirectory();
            file = new File(sd,"ic_icon5.png");
        }
        OkHttpClient okHttpClient = new OkHttpClient.Builder()
                .build();
        /**
         * 封装文件上传的  请求体
         */
        //1.设置文件以及文件上传类型封装
        RequestBody requestBody = RequestBody.create(MediaType.parse("image/png"), file);

        //2.文件上传的请求体封装
        MultipartBody body = new MultipartBody.Builder()
                .setType(MultipartBody.FORM)//设置文件上传Type类型为multipart/form-data
                .addFormDataPart("key", "H1809A")//设置普通参数
                .addFormDataPart("file", file.getName(), requestBody)//设置文件参数
                .build();

        Request request = new Request.Builder()
                .url("http://yun918.cn/study/public/file_upload.php")
                .post(body)
                .build();

        Call call = okHttpClient.newCall(request);
        call.enqueue(new Callback() {
            @Override
            public void onFailure(Call call, IOException e) {
                Log.e(TAG, "onFailure: "+e.getMessage() );
            }
            @Override
            public void onResponse(Call call, Response response) throws IOException {
                String str = response.body().string();
                Gson gson = new Gson();
                final UpLoadBean upLoadBean = gson.fromJson(str, UpLoadBean.class);
                runOnUiThread(new Runnable() {
                    @Override
                    public void run() {
                        if (upLoadBean!=null){
                            if (upLoadBean.getCode() == 200){
                                Glide.with(MainActivity.this).load(upLoadBean.getData().getUrl()).into(img);
                                Toast.makeText(MainActivity.this,upLoadBean.getRes(),Toast.LENGTH_SHORT).show();
                            }else {
                                Toast.makeText(MainActivity.this,upLoadBean.getRes(),Toast.LENGTH_SHORT).show();
                            }
                        }else{
                            Toast.makeText(MainActivity.this,"错误",Toast.LENGTH_SHORT).show();
                        }
                    }
                });
            }
        });
    }

}
